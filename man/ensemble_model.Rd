% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ensemble_model.R
\name{ensemble_model}
\alias{ensemble_model}
\title{Creates ensemble models from several algorithms}
\usage{
ensemble_model(species_name, occurrences, lon = "lon", lat = "lat",
  models_dir = "./models", final_dir = "final_models",
  ensemble_dir = "ensemble", proj_dir = "present",
  which_final = c("raw_mean"), consensus = FALSE,
  consensus_level = 0.5, write_ensemble = TRUE, write_occs = F,
  write_map = F, scale_models = TRUE, ...)
}
\arguments{
\item{species_name}{A character string with the species name. Because species name will be used as
a directory name, avoid non-ASCII characters, spaces and punctuation marks.
Recommendation is to adopt "Genus_species" format. See names in \code{\link{coordenadas}} as an example.}

\item{occurrences}{A data frame with occurrence data. Data must have at least columns with latitude an longitude values of species occurrences.
See \code{coordenadas} as an example.}

\item{lon}{The name of the longitude column. Defaults to "lon".}

\item{lat}{The name of the latitude column. Defaults to "lat".}

\item{models_dir}{Folder path to save the output files.}

\item{final_dir}{Character. Name of the folder to save the output files.
A subfolder will be created.}

\item{ensemble_dir}{Character string, name of the folder to save the output
files. A subfolder will be created. Defaults to "ensemble".}

\item{proj_dir}{Character. The name of the subfolder with the projection.
Defaults to "present" but can be set according to the other projections (i.e.
to execute the function in projected models).}

\item{which_final}{Which \code{final_model} will be used? Currently it can
be:
\describe{
  \item{\code{raw_mean}}{Continuous model generated by the mean of the raw
  models (scale from 0 to 1)}
  \item{\code{raw_mean_th}}{Cuts the \code{raw_mean} by the mean of the
  thresholds that maximize the selected evaluation metric (e.g. TSS
  (\code{spec_sens}) to make a binary model.}
   \item{\code{raw_mean_cut}}{Recovers \code{raw_mean} values above the mean
   threshold that
   maximizes the selected evaluation metric (e.g. TSS (\code{spec_sens}) or
   other \pkg{dismo} thresholds). Generates a continuous model.}
  \item{\code{bin_mean}}{The mean of the selected binary models. Generates a
   model in a discrete scale.}
  \item{\code{bin_consensus}}{The binary consensus from \code{bin_mean}.
  Parameter \code{consensus_level} must be defined, 0.5 means a majority
  consensus}
  \item{\code{cut_mean}}{The mean of the selected cut models. Values below
  the thresholds are down-weighted by zeros.}
}}

\item{consensus}{Logical. If \code{TRUE} a consensus between the algorithms
will be applied.}

\item{consensus_level}{Which proportion of models will be kept when creating
\code{bin_consensus} (binary).}

\item{write_ensemble}{Logical. If \code{TRUE} writes png files of the
ensemble models.}

\item{write_occs}{Logical. If \code{TRUE} writes the occurrence points on the
png file of the ensemble models.}

\item{write_map}{Logical. If \code{TRUE} adds a map contour to the png file
of the ensemble models.}

\item{scale_models}{Logical. Whether input models should be scaled between 0
and 1.}

\item{...}{Other parameters from \code{\link[raster]{writeRaster}}.}
}
\value{
Writes on disk raster files with the median, mean and standard
deviation and range of the assembled models. Also retuns a RasterStack with
all generated statistics (optional) written in the \code{ensemble_dir}
subfolder.
}
\description{
This function reads the output of \code{final_model} for multiple algorithms
and builds an ensemble model by calculating the mean of each final model
(i.e. one model per species per algorithm). It also calculates median and
deviation statistics such as standard deviation and range (maximum - minimum).
}
\examples{
# run setup_sdmdata
sp <- names(coordenadas)[1]
sp_coord <- coordenadas[[1]]
sp_setup <- setup_sdmdata(species_name = sp, occurrences = sp_coord,
example_vars)

# run do_many
sp_many <- do_many(species_name = sp,
                     predictors = example_vars,
                     bioclim = TRUE,
                     maxent = TRUE)

# run final_model
sp_final <- final_model(species_name = sp,
                        algorithms = c("bioclim", "maxent"),
                        select_partitions = TRUE,
                        select_par = "TSS",
                        select_par_val = 0,
                        which_models = c("raw_mean"),
                        consensus_level = 0.5,
                        overwrite = TRUE)

# run ensemble model
sp_ensemble <- ensemble_model(species_name = sp,
                              occurrences = sp_coord,
                              overwrite = TRUE)
}
\seealso{
\code{\link{final_model}}
}
