% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/setup_sdmdata.R
\name{setup_sdmdata}
\alias{setup_sdmdata}
\title{Prepares the dataset to perform ENM.}
\usage{
setup_sdmdata(species_name, occurrences, predictors,
  models_dir = "./models", real_absences = NULL, lon = "lon",
  lat = "lat", buffer_type = NULL, dist_buf = NULL,
  dist_min = NULL, buffer_shape = NULL, write_buffer = F,
  seed = NULL, clean_dupl = FALSE, clean_nas = FALSE,
  clean_uni = FALSE, geo_filt = FALSE, geo_filt_dist = NULL,
  select_variables = F, cutoff = 0.8, percent = 0.8,
  plot_sdmdata = T, n_back = 1000, partition_type = c("bootstrap"),
  boot_n = 1, boot_proportion = 0.7, cv_n = NULL,
  cv_partitions = NULL, ...)
}
\arguments{
\item{species_name}{A character string with the species name}

\item{occurrences}{A data frame with occurrence data. Data must have at least columns with latitude an longitude values of species occurrences. 
See \code{coordenadas} as an example.}

\item{predictors}{A RasterStack of predictor variables}

\item{models_dir}{Folder path to save the output files}

\item{real_absences}{User-defined absence points}

\item{lon}{The name of the longitude column. Defaults to "lon"}

\item{lat}{The name of the latitude column. Defaults to "lat"}

\item{buffer_type}{Character string indicating whether the buffer should be
calculated using the "mean", "median", "maximum" distance between occurrence
points, or an absolute "distance". If NULL pseudoabsences are randomly generated in the entire area 
of the RasterStack of predictor variables.
filled with predictors. If set to "distance", "dist_buf" needs to
be specified. If set to "user", "buffer_shape" needs to be specified}

\item{dist_buf}{Defines the width of the buffer. Needs to be specified if buffer_type = "distance".
Distance unit is in the same unit of the RasterStack of predictor variables}

\item{dist_min}{Optional, a distance for the exclusion buffer. 
Distance unit is in the same unit of the RasterStack of predictor variables}

\item{buffer_shape}{User-defined buffer shapefile in which pseudoabsences will be generated. 
Needs to be specified if buffer_type = "user"}

\item{write_buffer}{Logical. Should the resulting raster file be written? defaults to FALSE}

\item{seed}{Random number generator for reproducibility purposes. Used for sampling pseudoabsences}

\item{clean_dupl}{logical. If TRUE removes points with the same longitude and latitude}

\item{clean_nas}{logical. If TRUE removes points that are outside the bounds of the raster}

\item{clean_uni}{logical. If TRUE selects only one point per pixel}

\item{geo_filt}{Logical, delete occurrence that are too close?}

\item{geo_filt_dist}{The distance of the geographic filter (in kilometers)}

\item{select_variables}{Logical. Whether a call to \code{\link[modleR]{select_variables}}
should be performed. This function excludes autocorrelated environmental variables. Cutoff and percent parameters can be specified}

\item{cutoff}{Cutoff value of correlation between variables to exclude environmental layer. 
Default is to exclude environmental variables with correlation > 0.8}

\item{percent}{percentage of the raster values to be sampled to calculate the correlation. 
Default is to 0.8 but should be useful with high resolution rasters}

\item{plot_sdmdata}{Logical, whether png files will be written}

\item{n_back}{Number of pseudoabsence points. Defauls is 1,000}

\item{partition_type}{Perform bootstrap or k-fold crossvalidation?}

\item{boot_n}{How many bootstrap runs}

\item{boot_proportion}{Numerical 0 to 1, proportion of points to be sampled
for bootstrap}

\item{cv_n}{How many crossvalidation runs}

\item{cv_partitions}{Number of partitions in the crossvalidation}

\item{...}{Parameters from \code{\link{create_buffer}}}
}
\value{
A dataframe called sdmdata with the groups for each run
(in columns called cv.1, cv.2 or boot.1, boot.2), a presence/absence vector,
the geographical coordinates, of the occurrence and pseudoabsence points, and
the associated environmental variables.
}
\description{
This function takes the occurrence points files and makes the data cleaning,
data partitioning and the pseudo-absence point sampling, and saves the
metadata and sdmdata files into the hard disk.
}
\examples{
sp <- unique(coordenadas$sp)[1]
setup_sdmdata(sp, coordenadas[sp == sp,], example_vars)

}
\seealso{
\code{\link[dismo]{gridSample}}
}
\author{
Andrea SÃ¡nchez-Tapia
}
